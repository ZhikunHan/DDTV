(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{387:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ddtv-web-server-接口文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddtv-web-server-接口文档"}},[t._v("#")]),t._v(" DDTV_WEB_Server 接口文档")]),t._v(" "),a("h2",{attrs:{id:"接口说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口说明"}},[t._v("#")]),t._v(" 接口说明")]),t._v(" "),a("p",[t._v("当前DDTV的接口分为两种，并且只对DDTV_WEB_Server有效，"),a("strong",[t._v("其他版本是不能使用WEB请求和API操作接口的")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("接口类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("请求是否需要携带cookie")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("请求是否需要携带sig")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("WEB请求")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✅")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一般用于前端请求，需要先调用login接口进行登录，之后的操作每次携带登录返回的cookie即可")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("API操作")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✅")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一般用于程序调用，每个请求都可以直接调用，每次操作都需要携带根据key计算的sig")])])])]),t._v(" "),a("h2",{attrs:{id:"两种接口的调用差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种接口的调用差异"}},[t._v("#")]),t._v(" 两种接口的调用差异")]),t._v(" "),a("p",[t._v("详情请查看该路径下WEB请求和API操作相关页面的说明")]),t._v(" "),a("h2",{attrs:{id:"已实现的通用api列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已实现的通用api列表"}},[t._v("#")]),t._v(" 已实现的通用API列表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("方式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("返回内容")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_Info")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-info"}},[t._v("获取系统运行情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_Config")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-config"}},[t._v("获取系统配置文件信息")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_Resources")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-resources"}},[t._v("获取系统硬件资源使用情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_QueryWebFirstStart")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-querywebfirststart"}},[t._v("返回一个可以自行设定的初始化状态值")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_SetWebFirstStart")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-setsebfirststart"}},[t._v("设置初始化状态值")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("System_QueryUserState")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-system-queryuserstate"}},[t._v("查询B站接口返回数据判断用户登陆状态是否有效")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Config_Transcod")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-config-Transcod"}},[t._v("设置自动转码总开关")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Config_FileSplit")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-config-filesplit"}},[t._v("根据文件大小自动切片")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Config_DanmuRec")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-config-danmurec"}},[t._v("弹幕录制总共开关(包括礼物、舰队、SC)")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Config_GetFollow")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-config-getfollow"}},[t._v("导入关注列表中的V")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("File_GetAllFileList")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-file-getallfilelist"}},[t._v("获取已录制的文件列表")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("File_GetTypeFileList")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-file-gettypefilelist"}},[t._v("分类获取已录制的文件总列表")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("File_GetFile")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("FileStram")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-file-getfile"}},[t._v("下载对应的文件")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Login")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-login"}},[t._v("WEB登陆")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("loginqr")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("PNG")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-loginqr"}},[t._v("在提示登陆的情况下获取用于的登陆二维码")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Login_Reset")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-login-reset"}},[t._v("重新登陆哔哩哔哩账号")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Login_State")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-login-state"}},[t._v("查询内部登陆状态")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Rec_RecordingInfo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-rec-recordinginfo"}},[t._v("获取下载中的任务情况详细情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Rec_RecordingInfo_Lite")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-rec-recordinginfo-lite"}},[t._v("获取下载中的任务情况简略情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Rec_RecordCompleteInfon")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-rec-recordcompleteinfon"}},[t._v("获取已经完成的任务详细情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Rec_RecordCompleteInfon_Lite")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-rec-recordcompleteinfon-lite"}},[t._v("获取已经完成的任务简略情况")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Rec_CancelDownload")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-rec-canceldownload"}},[t._v("取消某个下载任务")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Room_AllInfo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-room-allinfo"}},[t._v("获取全部房间配置信息")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Room_Add")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-room-add"}},[t._v("增一个加房间配置")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Room_Del")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-room-del"}},[t._v("删除一个房间配置")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Room_AutoRec")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-room-autorec"}},[t._v("修改房间自动录制配置信息")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Room_DanmuRec")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-room-danmurec"}},[t._v("修改房间弹幕录制配置信息")])],1)]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("User_Search")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("RouterLink",{attrs:{to:"/API/#post-api-user-search"}},[t._v("通过B站搜索搜索直播用户")])],1)])])]),t._v(" "),a("h2",{attrs:{id:"返回数据内容格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回数据内容格式"}},[t._v("#")]),t._v(" 返回数据内容格式")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 状态码")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("code")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 接口名称")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" cmd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 信息")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" massage "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 对应的接口数据")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("T")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"返回结果状态码列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回结果状态码列表"}},[t._v("#")]),t._v(" 返回结果状态码列表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("成功")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("-2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("UID不存在")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("6000")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("登陆信息失效")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("6001")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("登陆验证失败")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("6002")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("APIsig计算校验失败")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("7000")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("操作失败")])])])]),t._v(" "),a("h2",{attrs:{id:"接口详细说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口详细说明"}},[t._v("#")]),t._v(" 接口详细说明")]),t._v(" "),a("h3",{attrs:{id:"post-api-system-info"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-info"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_Info")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取系统运行情况")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    public class SystemResourceClass\n    {\n        /// <summary>\n        /// 平台\n        /// </summary>\n        public string Platform { set; get; }\n        /// <summary>\n        /// CPU使用率\n        /// </summary>\n        public double CPU_usage { set; get; }\n        /// <summary>\n        /// 内存\n        /// </summary>\n        public MemInfo Memory { set; get; }  \n        /// <summary>\n        /// 硬盘信息\n        /// </summary>\n        public List<HDDInfo> HDDInfo { set; get; }\n        public class MemInfo\n        {\n            /// <summary>\n            /// 总计内存大小\n            /// </summary>\n            public long Total { get; set; }\n            /// <summary>\n            /// 可用内存大小\n            /// </summary>\n            public long Available { get; set; }\n        }\n        public class HDDInfo\n        {\n            /// <summary>\n            /// 注册路径\n            /// </summary>\n            public string FileSystem { set; get; }\n            /// <summary>\n            /// 硬盘大小\n            /// </summary>\n            public string Size { get; set; }\n            /// <summary>\n            /// 已使用大小\n            /// </summary>\n            public string Used { get; set; }\n            /// <summary>\n            /// 可用大小\n            /// </summary>\n            public string Avail { get; set; }\n            /// <summary>\n            /// 使用率\n            /// </summary>\n            public string Usage { get; set; }\n            /// <summary>\n            /// 挂载路径\n            /// </summary>\n            public string MountPath { set; get; }\n        }\n    }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-system-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-config"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_Config")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取系统配置文件信息")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('        public class Config\n        {\n            public List<Data> datas = new();\n            public class Data\n            {\n                /// <summary>\n                /// 配置键\n                /// </summary>\n                public Key Key { set; get; }\n                /// <summary>\n                /// 配置分组\n                /// </summary>\n                public Group Group { set; get; } = Group.Default;\n                /// <summary>\n                /// 配置值\n                /// </summary>\n                public string Value { set; get; } = "";\n                /// <summary>\n                /// 是否有效\n                /// </summary>\n                public bool Enabled { set; get; } = false;\n                \n            }\n        }\n        /// <summary>\n        /// 配置分组(每个值对应的组是固定的，请勿随意填写)\n        /// </summary>\n        public enum Group\n        {\n            /// <summary>\n            /// 缺省配置组(按道理应该给每个配置都设置组，不应该在缺省组里)\n            /// </summary>\n            Default,\n            /// <summary>\n            /// DDTV_Core运行相关的配置\n            /// </summary>\n            Core,\n            /// <summary>\n            /// 下载系统运行相关的配置\n            /// </summary>\n            Download,\n            /// <summary>\n            /// WEBAPI相关的配置\n            /// </summary>\n            WEB_API,\n            /// <summary>\n            /// 播放器相关设置\n            /// </summary>\n            Play,\n            /// <summary>\n            /// GUI相关设置\n            /// </summary>\n            GUI,\n        }\n        /// <summary>\n        /// 配置键\n        /// </summary>\n        public enum Key\n        {\n            /// <summary>\n            /// 房间配置文件路径 (应该是一个绝对\\相对路径文件地址)\n            /// 组：Core      默认值：./RoomListConfig.json\n            /// </summary>\n            RoomListConfig,\n            /// <summary>\n            /// 默认下载总文件夹路径 (应该是一个绝对\\相对路径目录)\n            /// 组：Download  默认值：./Rec/\n            /// </summary>\n            DownloadPath,\n            /// <summary>\n            /// 临时文件存放文件夹路径 (应该是一个绝对\\相对路径文件地址)\n            /// 组：Download  默认值：./tmp/\n            /// </summary>\n            TmpPath,\n            /// <summary>\n            /// 默认下载文件夹名字格式 (应该为关键字组合，如:{KEY}_{KEY})\n            /// 组：Download  默认值：{ROOMID}_{NAME}        可选值：ROOMID|NAME|DATE|TIME|TITLE|R\n            /// </summary>\n            DownloadDirectoryName,\n            /// <summary>\n            /// 默认下载文件名格式 (应该为关键字组合，如:{KEY}_{KEY})\n            /// 组：Download  默认值：{DATE}_{TIME}_{TITLE}  可选值：ROOMID|NAME|DATE|TIME|TITLE|R\n            /// </summary>\n            DownloadFileName,\n            /// <summary>\n            /// 转码默认参数 (应该是带{After}{Before}的ffmpeg参数字符串，如:-i {Before} -vcodec copy -acodec copy {After})\n            /// 组：Core      默认值：-i {Before} -vcodec copy -acodec copy {After}\n            /// </summary>\n            TranscodParmetrs,\n            /// <summary>\n            /// 自动转码 (自动转码的使能配置，为布尔值false或ture)\n            /// 组：Core      默认值：false\n            /// </summary>\n            IsAutoTranscod,\n            /// <summary>\n            /// 是否启用WEB_API加密证书 (应该为布尔值)\n            /// 组：WEB_API   默认值：false\n            /// </summary>\n            WEB_API_SSL,\n            /// <summary>\n            /// WEB_API启用HTTPS后调用的pfx证书文件路径 (应该是一个绝对\\相对路径文件地址)\n            /// 组：WEB_API   默认值：\n            /// </summary>\n            pfxFileName,\n            /// <summary>\n            /// WEB_API启用后HTTPS调用的pfx证书秘钥文件路径 (应该是一个绝对\\相对路径文件地址)\n            /// 组：WEB_API   默认值：\n            /// </summary>\n            pfxPasswordFileName,\n            /// <summary>\n            /// 播放器默认音量 (应该是一个uint值)\n            /// 组：Play      默认值：50      可选值：0-100\n            /// </summary>\n            DefaultVolume,\n            /// <summary>\n            /// GUI首次启动标志位 (应该是一个布尔值第一次启动为真)\n            /// 组：Core      默认值：true\n            /// </summary>\n            GUI_FirstStart,\n            /// <summary>\n            /// WEB首次启动标志位 (应该是一个布尔值第一次启动为真)\n            /// 组：Core      默认值：true\n            /// </summary>\n            WEB_FirstStart,\n            /// <summary>\n            /// 录制分辨率 (应该为有限的int值)\n            /// 组：Download  默认值：10000  可选值：流畅:80  高清:150  超清:250  蓝光:400  原画:10000\n            /// </summary>\n            RecQuality,\n            /// <summary>\n            /// 默认在线观看的分辨率 (应该为有限的int值)\n            /// 组：Play      默认值：250    可选值：流畅:80  高清:150  超清:250  蓝光:400  原画:10000\n            /// </summary>\n            PlayQuality,\n            /// <summary>\n            /// 全局弹幕录制开关 (布尔值，每个房间自己在房间配置列表单独设置，这个是是否启用弹幕录制功能的总共开关)\n            /// 组：Download  默认值：true\n            /// </summary>\n            IsRecDanmu,\n            /// <summary>\n            /// 全局礼物录制开关 (布尔值)\n            /// 组：Download  默认值：true\n            /// </summary>\n            IsRecGift,\n            /// <summary>\n            /// 全局上舰录制开关 (布尔值)\n            /// 组：Download  默认值：true\n            /// </summary>\n            IsRecGuard,\n            /// <summary>\n            /// 全局SC录制开关 (布尔值)\n            /// 组：Download  默认值：true\n            /// </summary>\n            IsRecSC,\n            /// <summary>\n            /// 全局FLV文件按大小切分开关 (布尔值)\n            /// 组：Download  默认值：false\n            /// </summary>\n            IsFlvSplit,\n            /// <summary>\n            /// 当IsFlvSplit为真时使能，FLV文件切分的大小 (应该为long值，切割值应该以byte计算)\n            /// 组：Download  默认值：1073741824\n            /// </summary>\n            FlvSplitSize,\n            /// <summary>\n            /// WEB登陆使用的用户名 (string)\n            /// 组：WEB_API   默认值：ami\n            /// </summary>\n            WebUserName,\n            /// <summary>\n            /// WEB登陆使用的密码 (string)\n            /// 组：WEB_API   默认值：ddtv\n            /// </summary>\n            WebPassword,\n            /// <summary>\n            /// WEBAPI使用的KeyId (string)\n            /// 组：WEB_API   默认值：(随机字符串)\n            /// </summary>\n            AccessKeyId,\n            /// <summary>\n            /// WEBAPI使用的KeySecret (string)\n            /// 组：WEB_API   默认值：(随机字符串)\n            /// </summary>\n            AccessKeySecret,\n            /// <summary>\n            /// 用于标记服务器资源ID编号 (string)\n            /// 组：WEB_API   默认值：(随机字符串)\n            /// </summary>\n            ServerAID,\n            /// <summary>\n            /// 用于标记服务器名称 (string)\n            /// 组：WEB_API   默认值：DDTV_Server\n            /// </summary>\n            ServerName,\n            /// <summary>\n            /// 客户端唯一标识 (string)\n            /// 组：Core      默认值：(随机字符串)\n            /// </summary>\n            ClientAID,\n            /// <summary>\n            /// 是否需要初始化\n            /// 组：  默认值：\n            /// </summary>\n            InitializationStatus,\n            /// <summary>\n            /// DDTVGUI缩放是否隐藏到托盘\n            /// 组：GUI       默认值：false\n            /// </summary>\n            HideIconState,\n            /// <summary>\n            /// DDTV_WEB跨域设置路径（应为前端网址，必须带协议和端口号，如：http://127.0.0.1:5500）\n            /// 组：WEB_API   默认值：*\n            /// </summary>\n            AccessControlAllowOrigin,\n            /// <summary>\n            /// DDTV_WEB的Credentials设置 (布尔值)\n            /// 组：WEB_API   默认值：true\n            /// </summary>\n            AccessControlAllowCredentials,\n\n        }\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-system-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-resources"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_Resources")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取系统硬件资源使用情况")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该接口消耗的系统硬件资源较高，请勿频繁调用！！！！！")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    public class SystemResourceClass\n    {\n        /// <summary>\n        /// 平台\n        /// </summary>\n        public string Platform { set; get; }\n        /// <summary>\n        /// CPU使用率\n        /// </summary>\n        public double CPU_usage { set; get; }\n        /// <summary>\n        /// 内存\n        /// </summary>\n        public MemInfo Memory { set; get; }  \n        /// <summary>\n        /// 硬盘信息\n        /// </summary>\n        public List<HDDInfo> HDDInfo { set; get; }\n    }\n\n        public class MemInfo\n        {\n            /// <summary>\n            /// 总计内存大小\n            /// </summary>\n            public long Total { get; set; }\n            /// <summary>\n            /// 可用内存大小\n            /// </summary>\n            public long Available { get; set; }\n        }\n\n    public class HDDInfo\n    {\n        /// <summary>\n        /// 注册路径\n        /// </summary>\n        public string FileSystem { set; get; }\n        /// <summary>\n        /// 硬盘大小\n        /// </summary>\n        public string Size { get; set; }\n\n        /// <summary>\n        /// 已使用大小\n        /// </summary>\n        public string Used { get; set; }\n\n        /// <summary>\n        /// 可用大小\n        /// </summary>\n        public string Avail { get; set; }\n\n        /// <summary>\n        /// 使用率\n        /// </summary>\n        public string Usage { get; set; }\n        /// <summary>\n        /// 挂载路径\n        /// </summary>\n        public string MountPath { set; get; }\n    }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-system-querywebfirststart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-querywebfirststart"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_QueryWebFirstStart")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("返回一个可以自行设定的初始化状态值(用于前端自行判断)")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该接口用于前端自行判断，启动后默认值都为真，不能作为DDTV是否正在运行的参考")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return bool;//直接指示当前的WEB_FirstStart值为多少\n\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-system-setwebfirststart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-setwebfirststart"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_SetWebFirstStart")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("设置初始化状态值")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("state")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("设置初始化状态值")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n用于设置初始化状态值(WEB_FirstStart)；该值无实际的逻辑处理，用于前端自行判断使用。")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('return MessageBase.Success(nameof(System_Config), state, $"设置初始化标志位为:{state}");\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-system-queryuserstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-system-queryuserstate"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/System_QueryUserState")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("用于判断用户登陆状态是否有效")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("注意事项"),a("br"),t._v("\n该接口应该是用于登陆状态是否有效的检测，检测到登陆状态失效就应该停止调用本接口，直到登陆状态恢复"),a("br"),t._v("\n检测登陆中时是否登陆成功，应该使用"),a("code",[t._v("/api/LoingState")]),t._v("进行查询")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return bool;//直接指示当前的登陆状态\n\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-config-transcod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-config-transcod"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Config_Transcod")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("设置自动转码总开关")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("state")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("打开或者关闭自动转码开关调用")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该接口需要依赖ffmpeg，请根据"),a("code",[t._v("进阶功能说明")]),t._v("中的"),a("code",[t._v("自动转码")]),t._v("页面的内容进行检查是否已经安装ffmpeg")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('MessageBase.Success(nameof(Config_Transcod), (state ? "打开" : "关闭") + "自动转码成功");\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-config-filesplit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-config-filesplit"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Config_FileSplit")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("根据文件大小自动切片")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("Size")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("设置自动分割文件大小(单位为byte)，为0时为关闭该功能")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n请勿输入1-10485760(1MB)的数值，在某些清晰度较高的直播间中，初始数据包会大于这个数值，这种情况下会报错")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('MessageBase.Success(nameof(Config_Transcod), (state ? "打开" : "关闭") + "根据文件大小自动切片成功");\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-config-danmurec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-config-danmurec"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Config_DanmuRec")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("弹幕录制总共开关(包括礼物、舰队、SC)")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("state")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("打开或关闭弹幕录制总开关")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该弹幕录制接口总共开关包括礼物、舰队、SC的录制开关，并且个房间自己在房间配置列表单独设置，这个只是是否启用弹幕录制功能的总共开关，要录制某个房间除了打开这个设置还需要房间配置启动打开录制")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('MessageBase.Success(nameof(Config_Transcod), (state ? "打开" : "关闭") + "弹幕录制总共开关成功(注:该弹幕录制接口总共开关包括礼物、舰队、SC的录制开关，并且个房间自己在房间配置列表单独设置，这个只是是否启用弹幕录制功能的总共开关，要录制某个房间除了打开这个设置还需要房间配置启动打开录制)");\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-config-getfollow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-config-getfollow"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Config_GetFollow")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("导入关注列表中的V")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该接口需要依赖哔哩哔哩账号登陆，使用前请确认已经扫码登陆")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("List<followClass>;\n\n  public class followClass\n        {\n            public long mid;\n            public int roomid;\n            public string name;\n        }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-file-getallfilelist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-file-getallfilelist"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/File_GetAllFileList")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取已录制的文件列表")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("List<string> FileList;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-file-getfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-file-getfile"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/File_GetFile")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("下载对应的文件")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("FileName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("根据提交的文件路径和文件名下载该文件")])])])]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return File();    \n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-file-gettypefilelist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-file-gettypefilelist"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/File_GetTypeFileList")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("分类获取已录制的文件总列表")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    public class TypeFileList\n    {\n        public List<FileList> fileLists =new List<FileList>();\n        public class FileList\n        {\n            public string Type { set; get; }\n            public List<string> files = new List<string>();\n        }\n    }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-login"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-login"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Login")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("WEB登陆")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UserName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("用于登陆的用户名，默认设置为ami，在配置文件中进行设置")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("Password")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("用于登陆的密码，默认设置为ddtv，在配置文件中进行设置")])])])]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" private class LoginOK\n        {\n            public string Cookie { get; set; }\n        }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-loginqr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-loginqr"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/loginqr")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("在提示登陆的情况下获取用于的登陆二维码")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('return File(ms.ToArray(), "image/png");\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-login-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-login-reset"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Login_Reset")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("重新登陆哔哩哔哩账号")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("p",[t._v("直接返回操作结果说明的字符串")])]),t._v(" "),a("h3",{attrs:{id:"post-api-login-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-login-state"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Login_State")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("查询内部登陆状态")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("p",[t._v("无")]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n        internal class LoginC\n        {       \n            internal LoginStatus LoginState { get; set; }\n        }\n\n        public enum LoginStatus\n        {\n            /// <summary>\n            /// 未登录\n            /// </summary>\n            NotLoggedIn = 0,\n            /// <summary>\n            /// 已登陆\n            /// </summary>\n            LoggedIn = 1,\n            /// <summary>\n            /// 登陆失效\n            /// </summary>\n            LoginFailure = 2,\n            /// <summary>\n            /// 登陆中\n            /// </summary>\n            LoggingIn = 3\n        }\n\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-rec-recordinginfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-rec-recordinginfo"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Rec_RecordingInfo")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取下载中的任务情况详细情况")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('return List<Downloads>;\n\n        public class Downloads\n        {\n            public string Token { get; set; }=Guid.NewGuid().ToString("N");\n            /// <summary>\n            /// 房间号\n            /// </summary>\n            public string RoomId { get; set; }\n            /// <summary>\n            /// 用户UID\n            /// </summary>\n            public long Uid { set; get; }\n            /// <summary>\n            /// 昵称\n            /// </summary>\n            public string Name { get; set; }\n            /// <summary>\n            /// 标题\n            /// </summary>\n            public string Title { get; set; }\n            /// <summary>\n            /// FLV大小限制使能\n            /// </summary>\n            public bool FlvSplit { get; set; } = false;\n            /// <summary>\n            /// FLV切割大小单位为byte\n            /// </summary>\n            public long FlvSplitSize { set; get; }\n            /// <summary>\n            /// 是否下载中\n            /// </summary>\n            public bool IsDownloading { get; set; }\n            /// <summary>\n            /// 下载地址\n            /// </summary>\n            public string Url { get; set; }\n            /// <summary>\n            /// 下载的完整文件路径\n            /// </summary>\n            public string FileName { set; get; }\n            /// <summary>\n            /// 文件夹路径\n            /// </summary>\n            public string FilePath { set; get; }\n            /// <summary>\n            /// 开始时间\n            /// </summary>\n            public DateTime StartTime { set; get; } = DateTime.Now;\n            /// <summary>\n            /// 结束时间\n            /// </summary>\n            public DateTime EndTime { set; get; }\n            public Tool.FlvModule.FlvClass.FlvTimes flvTimes { set; get; } = new();\n            /// <summary>\n            /// FLV文件头\n            /// </summary>\n            public Tool.FlvModule.FlvClass.FlvHeader FlvHeader { set; get; } = new();\n            /// <summary>\n            /// FLV头脚本数据\n            /// </summary>\n            public Tool.FlvModule.FlvClass.FlvTag FlvScriptTag { set; get; } = new();\n            /// <summary>\n            /// WebRequest类的HTTP的实现\n            /// </summary>\n            public HttpWebRequest HttpWebRequest { get; set; }\n            /// <summary>\n            /// 当前已下载字节数\n            /// </summary>\n            public long DownloadCount { get; set; }\n            /// <summary>\n            /// 该任务下所有任务的总下载字节数\n            /// </summary>\n            public long TotalDownloadCount { get; set; }\n            /// <summary>\n            /// 下载状态\n            /// </summary>\n            public DownloadStatus Status { get; set; } = DownloadStatus.NewTask;\n            public enum DownloadStatus\n            {\n                /// <summary>\n                /// 新任务\n                /// </summary>\n                NewTask,\n                /// <summary>\n                /// 已准备\n                /// </summary>\n                Standby,\n                /// <summary>\n                /// 下载中\n                /// </summary>\n                Downloading,\n                /// <summary>\n                /// 下载结束\n                /// </summary>\n                DownloadComplete,\n                /// <summary>\n                /// 取消下载\n                /// </summary>\n                Cancel,\n            }\n        }\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-rec-recordinginfo-lite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-rec-recordinginfo-lite"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Rec_RecordingInfo_Lite")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取下载中的任务情况简略情况")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return List<LiteDownloads>;\n\n    public class LiteDownloads\n    {\n        public string Token { get; set; }\n        /// <summary>\n        /// 房间号\n        /// </summary>\n        public string RoomId { get; set; }\n        /// <summary>\n        /// 用户UID\n        /// </summary>\n        public long Uid { set; get; }\n        /// <summary>\n        /// 标题\n        /// </summary>\n        public string Title { get; set; }\n        /// <summary>\n        /// 文件夹路径\n        /// </summary>\n        public string FilePath { set; get; }\n        /// <summary>\n        /// 开始时间(秒，Unix时间戳)\n        /// </summary>\n        public long StartTime { set; get; }\n        /// <summary>\n        /// 结束时间(秒，Unix时间戳)\n        /// </summary>\n        public long EndTime { set; get; }\n        /// <summary>\n        /// 该任务下所有子任务的总下载字节数\n        /// </summary>\n        public long TotalDownloadCount { get; set; }\n    }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-rec-recordcompleteinfon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-rec-recordcompleteinfon"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Rec_RecordCompleteInfon")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取已经完成的任务详细情况")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('return List<Downloads>;\n\n        public class Downloads\n        {\n            public string Token { get; set; }=Guid.NewGuid().ToString("N");\n            /// <summary>\n            /// 房间号\n            /// </summary>\n            public string RoomId { get; set; }\n            /// <summary>\n            /// 用户UID\n            /// </summary>\n            public long Uid { set; get; }\n            /// <summary>\n            /// 昵称\n            /// </summary>\n            public string Name { get; set; }\n            /// <summary>\n            /// 标题\n            /// </summary>\n            public string Title { get; set; }\n            /// <summary>\n            /// FLV大小限制使能\n            /// </summary>\n            public bool FlvSplit { get; set; } = false;\n            /// <summary>\n            /// FLV切割大小单位为byte\n            /// </summary>\n            public long FlvSplitSize { set; get; }\n            /// <summary>\n            /// 是否下载中\n            /// </summary>\n            public bool IsDownloading { get; set; }\n            /// <summary>\n            /// 下载地址\n            /// </summary>\n            public string Url { get; set; }\n            /// <summary>\n            /// 下载的完整文件路径\n            /// </summary>\n            public string FileName { set; get; }\n            /// <summary>\n            /// 文件夹路径\n            /// </summary>\n            public string FilePath { set; get; }\n            /// <summary>\n            /// 开始时间\n            /// </summary>\n            public DateTime StartTime { set; get; } = DateTime.Now;\n            /// <summary>\n            /// 结束时间\n            /// </summary>\n            public DateTime EndTime { set; get; }\n            public Tool.FlvModule.FlvClass.FlvTimes flvTimes { set; get; } = new();\n            /// <summary>\n            /// FLV文件头\n            /// </summary>\n            public Tool.FlvModule.FlvClass.FlvHeader FlvHeader { set; get; } = new();\n            /// <summary>\n            /// FLV头脚本数据\n            /// </summary>\n            public Tool.FlvModule.FlvClass.FlvTag FlvScriptTag { set; get; } = new();\n            /// <summary>\n            /// WebRequest类的HTTP的实现\n            /// </summary>\n            public HttpWebRequest HttpWebRequest { get; set; }\n            /// <summary>\n            /// 当前已下载字节数\n            /// </summary>\n            public long DownloadCount { get; set; }\n            /// <summary>\n            /// 该任务下所有任务的总下载字节数\n            /// </summary>\n            public long TotalDownloadCount { get; set; }\n            /// <summary>\n            /// 下载状态\n            /// </summary>\n            public DownloadStatus Status { get; set; } = DownloadStatus.NewTask;\n            public enum DownloadStatus\n            {\n                /// <summary>\n                /// 新任务\n                /// </summary>\n                NewTask,\n                /// <summary>\n                /// 已准备\n                /// </summary>\n                Standby,\n                /// <summary>\n                /// 下载中\n                /// </summary>\n                Downloading,\n                /// <summary>\n                /// 下载结束\n                /// </summary>\n                DownloadComplete,\n                /// <summary>\n                /// 取消下载\n                /// </summary>\n                Cancel,\n            }\n        }\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-rec-recordcompleteinfon-lite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-rec-recordcompleteinfon-lite"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Rec_RecordCompleteInfon_Lite")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取已经完成的任务简略情况")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return List<LiteDownloads>;\n\n    public class LiteDownloads\n    {\n        public string Token { get; set; }\n        /// <summary>\n        /// 房间号\n        /// </summary>\n        public string RoomId { get; set; }\n        /// <summary>\n        /// 用户UID\n        /// </summary>\n        public long Uid { set; get; }\n        /// <summary>\n        /// 标题\n        /// </summary>\n        public string Title { get; set; }\n        /// <summary>\n        /// 文件夹路径\n        /// </summary>\n        public string FilePath { set; get; }\n        /// <summary>\n        /// 开始时间(秒，Unix时间戳)\n        /// </summary>\n        public long StartTime { set; get; }\n        /// <summary>\n        /// 结束时间(秒，Unix时间戳)\n        /// </summary>\n        public long EndTime { set; get; }\n        /// <summary>\n        /// 该任务下所有子任务的总下载字节数\n        /// </summary>\n        public long TotalDownloadCount { get; set; }\n    }\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-rec-canceldownload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-rec-canceldownload"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Rec_CancelDownload")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("取消某个下载任务")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("要取消任务的账号UID")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n注意！是UID！是UID！")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return string;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-room-allinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-room-allinfo"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Room_AllInfo")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("获取全部房间配置信息")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("私有变量"),a("br"),t._v("\n无")])]),t._v(" "),a("li",[a("p",[t._v("注意事项\n该接口根据服务器上房间配置的多少决定，数据量可能会较多；在启动成功前30秒最好不要调用，该阶段属于API请求更新数据阶段，可能为空的数据较多。")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('return List<RoomInfoClass.RoomInfo>;\n\n        public class RoomInfo\n        {\n            /// <summary>\n            /// 标题\n            /// </summary>\n            public string title { get; set; } = "";\n            /// <summary>\n            /// 主播简介\n            /// </summary>\n            public string description { get; set; } = "";\n            /// <summary>\n            /// 关注数\n            /// </summary>\n            public int attention { get; set; } \n            /// <summary>\n            /// 直播间房间号(直播间实际房间号)\n            /// </summary>\n            public int room_id { get; set; }\n            /// <summary>\n            /// 主播mid\n            /// </summary>\n            public long uid { get; set; }\n            /// <summary>\n            /// 直播间在线人数\n            /// </summary>\n            public int online { get; set; }\n            /// <summary>\n            /// 开播时间(未开播时为-62170012800,live_status为1时有效)\n            /// </summary>\n            public long live_time { get; set; }\n            /// <summary>\n            /// 直播状态(1为正在直播，2为轮播中)\n            /// </summary>\n            public int live_status { get; set; }\n            /// <summary>\n            /// 直播间房间号(直播间短房间号，常见于签约主播)\n            /// </summary>\n            public int short_id { get; set; }\n            /// <summary>\n            /// 直播间分区id\n            /// </summary>\n            public int area { get; set; }\n            /// <summary>\n            /// 直播间分区名\n            /// </summary>\n            public string area_name { get; set; } = "";\n            /// <summary>\n            /// 直播间新版分区id\n            /// </summary>\n            public int area_v2_id { get; set; }\n            /// <summary>\n            /// 直播间新版分区名\n            /// </summary>\n            public string area_v2_name { get; set; } = "";\n            /// <summary>\n            /// 直播间父分区名\n            /// </summary>\n            public string area_v2_parent_name { get; set; } = "";\n            /// <summary>\n            /// 直播间父分区id\n            /// </summary>\n            public int area_v2_parent_id { get; set; }\n            /// <summary>\n            /// 用户名\n            /// </summary>\n            public string uname { get; set; } = "";\n            /// <summary>\n            /// 主播头像url\n            /// </summary>\n            public string face { get; set; } = "";\n            /// <summary>\n            /// 系统tag列表(以逗号分割)\n            /// </summary>\n            public string tag_name { get; set; } = "";\n            /// <summary>\n            /// 用户自定义tag列表(以逗号分割)\n            /// </summary>\n            public string tags { get; set; } = "";\n            /// <summary>\n            /// 直播封面图\n            /// </summary>\n            public string cover_from_user { get; set; } = "";\n            /// <summary>\n            /// 直播关键帧图\n            /// </summary>\n            public string keyframe { get; set; } = "";\n            /// <summary>\n            /// 直播间封禁信息\n            /// </summary>\n            public string lock_till { get; set; } = "";\n            /// <summary>\n            /// 直播间隐藏信息\n            /// </summary>\n            public string hidden_till { get; set; } = "";\n            /// <summary>\n            /// 直播类型(0:普通直播，1：手机直播)\n            /// </summary>\n            public int broadcast_type { get; set; }\n            /// <summary>\n            /// 是否p2p\n            /// </summary>\n            public int need_p2p { set; get; }\n            /// <summary>\n            /// 是否隐藏\n            /// </summary>\n            public bool is_hidden { set; get; }\n            /// <summary>\n            /// 是否锁定\n            /// </summary>\n            public bool is_locked { set; get; }\n            /// <summary>\n            /// 是否竖屏\n            /// </summary>\n            public bool is_portrait { set; get; }\n            /// <summary>\n            /// 是否加密\n            /// </summary>\n            public bool encrypted { set; get; }\n            /// <summary>\n            /// 加密房间是否通过密码验证(encrypted=true时才有意义)\n            /// </summary>\n            public bool pwd_verified { set; get; }\n            /// <summary>\n            /// 未知\n            /// </summary>\n            public int room_shield { set; get; }\n            /// <summary>\n            /// 是否为特殊直播间(0：普通直播间 1：付费直播间)\n            /// </summary>\n            public int is_sp { set; get; }\n            /// <summary>\n            /// 特殊直播间标志(0：普通直播间 1：付费直播间 2：拜年祭直播间)\n            /// </summary>\n            public int special_type { set; get; }\n            /// <summary>\n            /// 直播间状态(0:无房间 1:有房间)\n            /// </summary>\n            public int roomStatus { set; get; }\n            /// <summary>\n            /// (废弃：请使用live_status)(该值为getRoomInfoOld接口冗余值)直播状态(1为正在直播，2为轮播中)\n            /// </summary>\n            internal int liveStatus { set; get; }\n            /// <summary>\n            /// (废弃：请使用cover_from_user(该值为getRoomInfoOld接口冗余值)直播封面图\n            /// </summary>\n            internal string user_cover { get; set; } = "";\n            /// <summary>\n            /// 轮播状态(0：未轮播 1：轮播)\n            /// </summary>\n            public int roundStatus { set; get; }\n            /// <summary>\n            /// 直播间网页url\n            /// </summary>\n            public string url { set; get; } = "";\n            /// <summary>\n            /// 描述(Local值)\n            /// </summary>\n            public string Description { get; set; } = "";\n            /// <summary>\n            /// 是否自动录制(Local值)\n            /// </summary>\n            public bool IsAutoRec { set; get; }\n            /// <summary>\n            /// 是否开播提醒(Local值)\n            /// </summary>\n            public bool IsRemind { set; get; }\n            /// <summary>\n            /// 是否录制弹幕(Local值)\n            /// </summary>\n            public bool IsRecDanmu { set; get; }\n            /// <summary>\n            /// 特殊标记(Local值)\n            /// </summary>\n            public bool Like { set; get; }\n            /// <summary>\n            /// 用户等级\n            /// </summary>\n            public int level { set; get; }\n            /// <summary>\n            /// 主播性别\n            /// </summary>\n            public string sex { set; get; }\n            /// <summary>\n            /// 主播简介\n            /// </summary>\n            public string sign { set; get; }\n            /// <summary>\n            /// 房间的WS连接对象类\n            /// </summary>\n            public RoomWebSocket roomWebSocket { set; get; }= new RoomWebSocket();\n            /// <summary>\n            /// 下载标识符\n            /// </summary>\n            public bool IsDownload { set; get; } = false;\n            /// <summary>\n            /// 房间当前下载任务记录\n            /// </summary>\n            public List<Downloads> DownloadingList { set; get; } = new List<Downloads>();\n            /// <summary>\n            /// 房间历史下载记录\n            /// </summary>\n            public List<Downloads> DownloadedLog { set; get; } = new List<Downloads>();\n            /// <summary>\n            /// 弹幕录制对象\n            /// </summary>\n            public API.DanMu.DanMuClass.DanmuMessage DanmuFile { set; get; } = new API.DanMu.DanMuClass.DanmuMessage();\n            /// <summary>\n            /// 是否正在被编辑\n            /// </summary>\n            public bool IsCliping { set; get; } = false;\n            /// <summary>\n            /// 该房间当前的任务时间\n            /// </summary>\n            public DateTime CreationTime { set; get; } = DateTime.Now; \n        }\n')])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-room-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-room-add"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Room_Add")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("增一个加房间配置")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("要增加到房间配置中的账号UID")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该接口的调用频率不能超过3秒/次，该接口后面封装的B站原生API较为复杂，如果请求过多，可能会造成频率过高导致412鉴权错误导致IP被黑名单半小时左右。")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return string;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-room-del"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-room-del"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Room_Del")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("删除一个房间配置")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("要从房间配置中删除的账号UID")])])])]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return string;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-room-autorec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-room-autorec"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Room_AutoRec")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("修改房间自动录制配置信息")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("要修改自动录制配置的账号UID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("IsAutoRec")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("打开\\关闭开播自动录制")])])])]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return string;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-room-danmurec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-room-danmurec"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/Room_DanmuRec")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("修改房间弹幕录制配置信息")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("UID")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("要修改自动录制配置的账号UID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("IsRecDanmu")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("打开\\关闭该房间的弹幕录制功能")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意事项\n该功能收到总弹幕录制配置的限制，如要打开该房间的弹幕录制功能，请确认总开关已经启动")])]),t._v(" "),a("li",[a("p",[t._v("返回数据说明")])])]),t._v(" "),a("div",{staticClass:"language-C# extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("return string;\n")])])])]),t._v(" "),a("h3",{attrs:{id:"post-api-user-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-api-user-search"}},[t._v("#")]),t._v(" "),a("code",[t._v("POST /api/User_Search")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("通过B站搜索搜索直播用户")]),t._v(" "),a("ul",[a("li",[t._v("私有变量")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("参数名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必须")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("keyword")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",[t._v("需要搜索的关键词")])])])]),t._v(" "),a("ul",[a("li",[t._v("返回数据说明")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("内容")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("结果类型")]),t._v(" "),a("td",[t._v("固定为live_user")])]),t._v(" "),a("tr",[a("td",[t._v("rank_offset")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("搜索结果排名值")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("uid")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("主播mid")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("tas")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("直播间TAG")]),t._v(" "),a("td",[t._v("多个用"),a("code",[t._v(",")]),t._v("分隔")])]),t._v(" "),a("tr",[a("td",[t._v("live_time")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("开播时间")]),t._v(" "),a("td",[t._v("YYYY-MM-DD HH:MM:SS"),a("br"),t._v("如未开播为0000-00-00 00:00:00")])]),t._v(" "),a("tr",[a("td",[t._v("hit_columns")]),t._v(" "),a("td",[t._v("array")]),t._v(" "),a("td",[t._v("关键字匹配类型")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("live_status")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("是否开播")]),t._v(" "),a("td",[t._v("0：未开播"),a("br"),t._v("1：已开播")])]),t._v(" "),a("tr",[a("td",[t._v("area")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[a("strong",[t._v("作用尚不明确")])])]),t._v(" "),a("tr",[a("td",[t._v("is_live")]),t._v(" "),a("td",[t._v("bool")]),t._v(" "),a("td",[t._v("是否开播")]),t._v(" "),a("td",[t._v("false：未开播"),a("br"),t._v("true：已开播")])]),t._v(" "),a("tr",[a("td",[t._v("uname")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("主播昵称")]),t._v(" "),a("td",[t._v("关键字用xml标签"),a("code",[t._v('<em class="keyword">')]),t._v("标注")])]),t._v(" "),a("tr",[a("td",[t._v("uface")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("主播头像url")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("rank_index")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[a("strong",[t._v("作用尚不明确")])])]),t._v(" "),a("tr",[a("td",[t._v("rank_score")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("结果排序量化值")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("attentions")]),t._v(" "),a("td",[t._v("num")]),t._v(" "),a("td",[t._v("主播粉丝数")]),t._v(" "),a("td")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);